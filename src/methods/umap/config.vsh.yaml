# Base component API configuration
__merge__: ../../api/comp_method.yaml

# Component configuration
name: "umap"
label: UMAP
summary: "A manifold learning algorithm that utilizes topological data analysis for dimension reduction."
description: |
  Uniform Manifold Approximation and Projection is an algorithm for
  dimension reduction based on manifold learning techniques and ideas from
  topological data analysis. We perform UMAP on the logCPM expression matrix
  before and after HVG selection and with and without PCA as a pre-processing
  step.
references:
  doi: 10.48550/arxiv.1802.03426
links:
  repository: https://github.com/lmcinnes/umap
  documentation: https://umap-learn.readthedocs.io/en/latest/
info:
  preferred_normalization: log_cp10k
  variants:
    umap_logCP10k:
    umap_pca_logCP10k:
      n_pca_dims: 50
    umap_logCP10k_1kHVG:
      n_hvg: 1000
    umap_pca_logCP10k_1kHVG:
      n_pca_dims: 50
      n_hvg: 1000

# Script configuration
arguments:
  - name: "--n_hvg"
    type: integer
    description: Number of highly variable genes to subset to. If not specified, the input matrix will not be subset.
    default: 1000
  - name: "--n_pca_dims"
    type: integer
    description: Number of PCA dimensions to use. If not specified, no PCA will be performed.
resources:
  - type: python_script
    path: script.py

# Platform configuration
engines:
  - type: docker
    image: openproblems/base_python:1.0.0
    setup:
      - type: python
        packages:
          - umap-learn
          - pynndescent~=0.5.11 # See https://github.com/openproblems-bio/openproblems-v2/issues/266
runners:
  - type: executable
  - type: nextflow
    directives:
      label: [midtime, highmem, highcpu]
